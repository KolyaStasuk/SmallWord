<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AKSgAoosBHHUlMlDc0UAFLQCFopMoKWgApc0AGaO1ABmkzQAUtABRmgBKKACigAooAKSgAooAKKYiNKf
        QJCGkwaBBSigYtFAxaKQwpaACjmgAooAKKACigAooASigAoosAUUWAKSmIM0UANWnUCQlFAMKWgEFLQM
        KKACikAUUDCigAop2EFFKwwop2EFFABSUAH5UUAFJQAUUCBRSmgEFJQMWigApaACigAooAKKADNGaACi
        gAooAKKACkzQAZooASigQUUCCkzQA4UGgoKKAFpMUAFGaADNFAC0UAFFACUUAGaM0AFFABRQAmaKAuFF
        BIUUAFFACUlAD6DQUFFABS0AJRQAUtACUUAFFABRQAUUAFJQAc0UCCigQUUAFFACUlABSUAS0UFCUUAL
        RQAmKKACigAooAKKACigApKACigAooJCigAooATNFACUlABRQBLRQUJS0AFFABRQAlFABRQAUUAFFAAa
        SgTCigAooEFFABSGgBKPwoASigAooAlpKCgooAWigApKACigAooAKKADNFACUUCYUUBYKKBBRQAmaDQA
        lJmgAooAKSgRNSUFhRQAUUAFFABRQAUnegBaKACigBKKACigQUUCEzRuoASkoAKKACigQlFAEx6UlBYU
        UAFFABmigAooAQ0tABmjNAXDNJmgVwooAKKBCUY96AEwKKACkoAKKACkoEFFAE1JQWJ3paAFooAKSgAo
        oAQ0UAFFAgooAKKBBRQAmaQ0AJRQAUlAgooAKKACigCakNBYnelFAC0UAJRQAUUAGKKAEFLQK4lJ+NAB
        SUCCjNACUUAFJQIKKACigApKACigZPTTQUFKKBIWkzQMKKAEzRQK4ZooATNGRQIM03NABRQAUUAJRQIK
        KACigAooASigApM0DJzTc0DYUooBATzSZoBhmjNAgNJQAZozQAhooAKKACkoEFFABRQAUUAFIaADNGaB
        iUUABpKAP//ZAP/bAEMAAwICAwICAwMDAwQDAwQFCAUFBAQFCgcHBggMCgwMCwoLCw0OEhANDhEOCwsQ
        FhARExQVFRUMDxcYFhQYEhQVFP/bAEMBAwQEBQQFCQUFCRQNCw0UFBQUFBQUFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFP/AABEIATUBdQMBIgACEQEDEQH/xAAfAAABBQEBAQEB
        AQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEU
        MoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdo
        aWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1
        EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXx
        FxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/
        2gAMAwEAAhEDEQA/AN5vuioalptfbI/i5qwyin0yqJHbKWkp9SA2iiimhMZRT6KLhYZRT6ZTEFFFFABR
        RRQAUUUUAFFFFAgphzmn0UAM5o5p9MOc0DDmk8vNLzRzQIjPBNJUvNHNBJFRSnqaSgAooooAKKbTqAG0
        lPptACUUUUAFFFFaJEBTadTaYBTDnNPpP+A0AM5o5qSmHOaDNqwnNFHNFAjXPU0ynnqaSuc9GQ2iiimZ
        hTqbTqQBTaKdQA2jZRRTAKKKKQBRRRVANfpTdpqSimKwyiiigQUUUUAFFFFABRRRQAw5zRzT6Yc5oEHN
        Rnqak5o5oEyKilPU0lAgooooAKbTqbQA6imUUALSUUUAFFFFaJ3I2CiiihMBtFOptMBhzmk5qSigCPmi
        lOc0UGRrHqaSim1zne2D9KSloqiRF+8afTadUgKfvLTG+8adTaADfTqbR8tABRTqbQAUUUVQkFMpx6ik
        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
</value>
  </data>
</root>